{"version":3,"sources":["store/types.js","store/references.js","store/search.js","store/index.js","components/SearchComponent.jsx","store/filteredReferences.js","views/home/HomeView.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["types","uniq","data","map","d","type","typeReducer","arguments","length","undefined","initialReferences","sortBy","r","title","references","reference","index","Object","objectSpread","id","referencesSelector","state","referenceReducer","initialState","UPDATE_SEARCH_ACTION","searchReducer","action","value","rootReducer","combineReducers","search","enhancer","composeWithDevTools","apply","store","createStore","connect","onSearch","props","react_default","a","createElement","className","input","Search","placeholder","style","width","removeDiacritics","string","normalize","replace","referenceIndexSelector","createSelector","toLowerCase","filteredReferencesSelector","searchSelector","referenceIndex","ids","filter","_ref","includes","_ref2","_ref3","TypeIcon","icon","theme","Cover","coverUrl","src","alt","concat","url","startsWith","code","split","frameBorder","allow","allowFullScreen","ReferenceCard","href","target","rel","card","hoverable","cover","Meta","avatar","list","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","locale","emptyText","renderItem","Item","key","AppLayout","layout","Header","menu","mode","selectable","lineHeight","components_SearchComponent","Content","Switch","Route","path","exact","component","home_HomeView","Redirect","to","pathname","App","es","HashRouter","components_AppLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1aea84b2.chunk.js","sourcesContent":["import { uniq } from 'ramda';\nimport data from '../references';\n\nconst types = uniq(data.map(d => d.type));\n\nfunction typeReducer(state = types) {\n  return state;\n}\n\nexport default typeReducer;\n","import { sortBy } from 'ramda';\n\nimport references from '../references';\n\nconst initialReferences = sortBy(r => r.title, references).map(\n  (reference, index) => ({\n    id: index,\n    ...reference,\n  }),\n);\n\nfunction referenceReducer(state = initialReferences) {\n  return state;\n}\n\nexport function referencesSelector(state) {\n  return state.references;\n}\n\nexport default referenceReducer;\n","const initialState = '';\n\nconst UPDATE_SEARCH_ACTION = 'search/update_search';\n\nexport function updateSearch(value) {\n  return { type: UPDATE_SEARCH_ACTION, value };\n}\n\nfunction searchReducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH_ACTION:\n      return action.value;\n    default:\n  }\n  return state;\n}\n\nexport function searchSelector(state) {\n  return state.search;\n}\n\nexport default searchReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport typeReducer from './types';\nimport referenceReducer from './references';\nimport searchReducer from './search';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  types: typeReducer,\n  references: referenceReducer,\n  search: searchReducer,\n});\n\nconst enhancers = [];\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\n\nimport { updateSearch } from '../store/search';\n\nfunction SearchComponent(props) {\n  const { onSearch } = props;\n  return (\n    <div className=\"SearchComponent\">\n      <Input.Search\n        placeholder=\"Recherche\"\n        style={{ width: '50em' }}\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n\nSearchComponent.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { onSearch: updateSearch },\n)(SearchComponent);\n","import { createSelector } from 'reselect';\nimport { searchSelector } from './search';\nimport { referencesSelector } from './references';\n\nfunction removeDiacritics(string) {\n  return string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nconst referenceIndexSelector = createSelector(referencesSelector, references =>\n  references.map(reference => ({\n    ...reference,\n    title: removeDiacritics(reference.title.toLowerCase()),\n  })),\n);\n\nfunction filteredReferencesSelector(state) {\n  const search = removeDiacritics(searchSelector(state));\n  const referenceIndex = referenceIndexSelector(state);\n  const references = referencesSelector(state);\n  const ids = referenceIndex\n    .filter(({ title }) => title.includes(search))\n    .map(({ id }) => id);\n\n  return references.filter(({ id }) => ids.includes(id));\n}\n\nexport default filteredReferencesSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, Card, Icon } from 'antd';\n\nimport filteredReferencesSelector from '../../store/filteredReferences';\n\nfunction TypeIcon({ type }) {\n  switch (type) {\n    case 'VIDEO':\n    case 'CHANNEL':\n      return <Icon type=\"youtube\" theme=\"outlined\" />;\n    case 'MUSIC':\n    case 'PODCAST':\n      return <Icon type=\"customer-service\" theme=\"outlined\" />;\n    case 'BOOK':\n      return <Icon type=\"book\" theme=\"outlined\" />;\n    case 'MOVIE':\n      return <Icon type=\"video-camera\" theme=\"outlined\" />;\n    case 'WEBSITE':\n      return <Icon type=\"global\" theme=\"outlined\" />;\n    case 'PICTURE':\n      return <Icon type=\"picture\" theme=\"outlined\" />;\n    default:\n      return null;\n  }\n}\n\nfunction Cover({ reference }) {\n  if (reference.coverUrl) {\n    return (\n      <img\n        className=\"Cover\"\n        src={reference.coverUrl}\n        alt={`logo of ${reference.title}`}\n      />\n    );\n  }\n\n  if (reference.url && reference.url.startsWith('https://youtu.be/')) {\n    const code = reference.url.split('/')[3];\n    return (\n      <iframe\n        className=\"Cover\"\n        title={`youtube-${code}`}\n        src={`https://www.youtube.com/embed/${code}`}\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media\"\n        allowFullScreen\n      />\n    );\n  }\n  return <div className=\"Cover\" />;\n}\n\nCover.propTypes = {\n  reference: PropTypes.shape({\n    url: PropTypes.string,\n    coverUrl: PropTypes.string,\n  }).isRequired,\n};\n\nfunction ReferenceCard({ reference }) {\n  return (\n    <div className=\"ReferenceCard\">\n      <a href={reference.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <Card hoverable cover={<Cover reference={reference} />}>\n          <Card.Meta\n            avatar={<TypeIcon type={reference.type} />}\n            title={reference.title}\n          />\n        </Card>\n      </a>\n    </div>\n  );\n}\nReferenceCard.propTypes = {\n  reference: PropTypes.shape({\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nfunction HomeView(props) {\n  const { references } = props;\n  return (\n    <div className=\"HomeView\">\n      <List\n        grid={{ gutter: 16, xs: 1, sm: 2, md: 4, lg: 4, xl: 4, xxl: 3 }}\n        dataSource={references}\n        locale={{ emptyText: 'Aucune référence' }}\n        renderItem={reference => (\n          <List.Item key={reference.title}>\n            <ReferenceCard reference={reference} />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n\nHomeView.propTypes = {\n  references: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default connect(state => ({\n  references: filteredReferencesSelector(state),\n}))(HomeView);\n","import React from 'react';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport SearchComponent from './SearchComponent';\n\nimport HomeView from '../views/home/HomeView';\n\nfunction AppLayout() {\n  return (\n    <div className=\"AppLayout\">\n      <Layout>\n        <Layout.Header>\n          <Menu\n            mode=\"horizontal\"\n            theme=\"dark\"\n            selectable={false}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"home\">\n              <strong>Références</strong>\n            </Menu.Item>\n            <Menu.Item key=\"search\">\n              <SearchComponent />\n            </Menu.Item>\n            <Menu.Item key=\"github\">\n              <a\n                href=\"https://github.com/ewoken/anthropocene-references\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {'GitHub '}\n                <Icon type=\"github\" theme=\"outlined\" />\n              </a>\n            </Menu.Item>\n          </Menu>\n        </Layout.Header>\n        <Layout.Content>\n          <Switch>\n            <Route path=\"/\" exact component={() => <HomeView />} />\n            <Route component={() => <Redirect to={{ pathname: '/' }} />} />\n          </Switch>\n        </Layout.Content>\n        {/* <Layout.Footer>Footer</Layout.Footer> */}\n      </Layout>\n    </div>\n  );\n}\n\nexport default AppLayout;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <AppLayout />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}