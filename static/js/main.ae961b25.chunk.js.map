{"version":3,"sources":["store/types.js","store/references.js","store/search.js","store/index.js","components/SearchComponent.jsx","components/GitHubLink.jsx","components/AddComponent.jsx","store/filteredReferences.js","views/home/HomeView.jsx","components/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["types","uniq","data","map","d","type","typeReducer","arguments","length","undefined","initialReferences","sortBy","r","title","references","reference","index","Object","objectSpread","id","referencesSelector","state","referenceReducer","initialState","UPDATE_SEARCH_ACTION","searchReducer","action","value","rootReducer","combineReducers","search","enhancer","composeWithDevTools","apply","store","createStore","connect","dispatch","props","onSearch","resetPage","updateSearch","react_default","a","createElement","className","input","Search","placeholder","style","width","GitHubLink","href","target","rel","icon","theme","AddComponent","components_GitHubLink","src","alt","removeDiacritics","string","normalize","replace","referenceIndexSelector","createSelector","toLowerCase","REFERENCE_PER_PAGE","filteredReferencesSelector","page","referenceIndex","searchSelector","startIndex","ids","filter","_ref","includes","_ref2","total","_ref3","slice","pageSize","TypeIcon","Cover","coverUrl","concat","url","startsWith","code","split","frameBorder","allow","allowFullScreen","endsWith","ReferenceCard","card","hoverable","cover","Meta","avatar","tooltip","currentPage","Number","match","params","_filteredReferencesSe","goToPage","window","scroll","history","push","list","header","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","locale","emptyText","renderItem","Item","key","footer","pagination","current","hideOnSinglePage","onChange","withRouter","layout","Header","position","zIndex","menu","mode","selectable","lineHeight","components_SearchComponent","popover","content","components_AddComponent","trigger","es_button","Content","padding","marginTop","Switch","Route","path","exact","component","HomeView","Redirect","to","pathname","App","es","HashRouter","components_AppLayout","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae961b25.chunk.js","sourcesContent":["import { uniq } from 'ramda';\nimport data from '../references';\n\nconst types = uniq(data.map(d => d.type));\n\nfunction typeReducer(state = types) {\n  return state;\n}\n\nexport default typeReducer;\n","import { sortBy } from 'ramda';\n\nimport references from '../references';\n\nconst initialReferences = sortBy(r => r.title, references).map(\n  (reference, index) => ({\n    id: index,\n    ...reference,\n  }),\n);\n\nfunction referenceReducer(state = initialReferences) {\n  return state;\n}\n\nexport function referencesSelector(state) {\n  return state.references;\n}\n\nexport default referenceReducer;\n","const initialState = '';\n\nconst UPDATE_SEARCH_ACTION = 'search/update_search';\n\nexport function updateSearch(value) {\n  return { type: UPDATE_SEARCH_ACTION, value };\n}\n\nfunction searchReducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH_ACTION:\n      return action.value;\n    default:\n  }\n  return state;\n}\n\nexport function searchSelector(state) {\n  return state.search;\n}\n\nexport default searchReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport typeReducer from './types';\nimport referenceReducer from './references';\nimport searchReducer from './search';\n\nconst rootReducer = combineReducers({\n  // ...reducers,\n  types: typeReducer,\n  references: referenceReducer,\n  search: searchReducer,\n});\n\nconst enhancers = [];\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\nconst enhancer = composeEnhancers(...enhancers);\n\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\n\nimport { updateSearch } from '../store/search';\n\nfunction SearchComponent(props) {\n  const { onSearch } = props;\n  return (\n    <div className=\"SearchComponent\">\n      <Input.Search\n        placeholder=\"Recherche\"\n        style={{ width: '30em' }}\n        onSearch={onSearch}\n      />\n    </div>\n  );\n}\n\nSearchComponent.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  (dispatch, props) => ({\n    onSearch(value) {\n      props.resetPage();\n      dispatch(updateSearch(value));\n    },\n  }),\n)(SearchComponent);\n","import React from 'react';\nimport { Icon } from 'antd';\n\nfunction GitHubLink() {\n  return (\n    <a\n      href=\"https://github.com/ewoken/anthropocene-references\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {'GitHub '}\n      <Icon type=\"github\" theme=\"outlined\" />\n    </a>\n  );\n}\n\nexport default GitHubLink;\n","import React from 'react';\n\nimport GitHubLink from './GitHubLink';\n\nfunction AddComponent() {\n  return (\n    <div className=\"AddComponent\">\n      <ul>\n        <li>\n          {'Ajouter une issue ou proposer une PR sur '}\n          <GitHubLink />\n        </li>\n        <li>\n          {'OU envoyer un mail à'}\n          <img src=\"./myemail.png\" alt=\"email\" />\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default AddComponent;\n","import { createSelector } from 'reselect';\nimport { searchSelector } from './search';\nimport { referencesSelector } from './references';\n\nfunction removeDiacritics(string) {\n  return string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nconst referenceIndexSelector = createSelector(referencesSelector, references =>\n  references.map(reference => ({\n    ...reference,\n    title: removeDiacritics(reference.title.toLowerCase()),\n  })),\n);\n\nconst REFERENCE_PER_PAGE = 20;\n\nfunction filteredReferencesSelector(page, state) {\n  const references = referencesSelector(state);\n  const referenceIndex = referenceIndexSelector(state);\n  const search = removeDiacritics(searchSelector(state));\n  const startIndex = (page - 1) * REFERENCE_PER_PAGE;\n  const ids = referenceIndex\n    .filter(({ title }) => title.includes(search))\n    .map(({ id }) => id);\n\n  return {\n    total: ids.length,\n    references: references\n      .filter(({ id }) => ids.includes(id))\n      .slice(startIndex, startIndex + REFERENCE_PER_PAGE),\n    pageSize: REFERENCE_PER_PAGE,\n  };\n}\n\nexport default filteredReferencesSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { List, Card, Icon, Tooltip, Pagination } from 'antd';\n\nimport filteredReferencesSelector from '../../store/filteredReferences';\n\nfunction TypeIcon({ type }) {\n  switch (type) {\n    case 'VIDEO':\n    case 'CHANNEL':\n      return <Icon type=\"youtube\" theme=\"outlined\" />;\n    case 'MUSIC':\n    case 'PODCAST':\n      return <Icon type=\"customer-service\" theme=\"outlined\" />;\n    case 'BOOK':\n      return <Icon type=\"book\" theme=\"outlined\" />;\n    case 'MOVIE':\n    case 'SERIES':\n      return <Icon type=\"video-camera\" theme=\"outlined\" />;\n    case 'WEBSITE':\n      return <Icon type=\"global\" theme=\"outlined\" />;\n    case 'PICTURE':\n      return <Icon type=\"picture\" theme=\"outlined\" />;\n    case 'ASSOCIATION':\n      return <Icon type=\"team\" theme=\"outlined\" />;\n    case 'ARTICLE':\n      return <Icon type=\"file-text\" theme=\"outlined\" />;\n    default:\n      return null;\n  }\n}\n\nfunction Cover({ reference }) {\n  if (reference.coverUrl) {\n    return (\n      <img\n        className=\"Cover\"\n        src={reference.coverUrl}\n        alt={`logo of ${reference.title}`}\n      />\n    );\n  }\n\n  if (reference.url && reference.url.startsWith('https://youtu.be/')) {\n    const code = reference.url.split('/')[3];\n    return (\n      <iframe\n        className=\"Cover\"\n        title={`youtube-${code}`}\n        src={`https://www.youtube.com/embed/${code}`}\n        frameBorder=\"0\"\n        allow=\"autoplay; encrypted-media\"\n        allowFullScreen\n      />\n    );\n  }\n\n  if (reference.url && reference.url.endsWith('.pdf')) {\n    return (\n      <object className=\"Cover\" data={reference.url} type=\"application/pdf\">\n        <p>Viewer de pdf - Cliquez pour télécharger</p>\n      </object>\n    );\n  }\n\n  return <div className=\"Cover\" />;\n}\n\nCover.propTypes = {\n  reference: PropTypes.shape({\n    url: PropTypes.string,\n    coverUrl: PropTypes.string,\n  }).isRequired,\n};\n\nfunction ReferenceCard({ reference }) {\n  return (\n    <div className=\"ReferenceCard\">\n      <a href={reference.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <Card hoverable cover={<Cover reference={reference} />}>\n          <Card.Meta\n            avatar={<TypeIcon type={reference.type} />}\n            title={<Tooltip title={reference.title}>{reference.title}</Tooltip>}\n          />\n        </Card>\n      </a>\n    </div>\n  );\n}\nReferenceCard.propTypes = {\n  reference: PropTypes.shape({\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nfunction HomeView(props) {\n  const { references, total, currentPage, pageSize, goToPage } = props;\n  return (\n    <div className=\"HomeView\">\n      <List\n        header={<div>{`Nombre de référence: ${total}`}</div>}\n        grid={{ gutter: 16, xs: 1, sm: 2, md: 4, lg: 4, xl: 4, xxl: 3 }}\n        dataSource={references}\n        locale={{ emptyText: 'Aucune référence' }}\n        renderItem={reference => (\n          <List.Item key={reference.title}>\n            <ReferenceCard reference={reference} />\n          </List.Item>\n        )}\n        footer={( // eslint-disable-line\n          <Pagination\n            current={currentPage}\n            pageSize={pageSize}\n            total={total}\n            hideOnSinglePage\n            onChange={goToPage}\n          />\n        )} // eslint-disable-line\n      />\n    </div>\n  );\n}\n\nHomeView.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  references: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  goToPage: PropTypes.func.isRequired,\n};\n\nexport default connect((state, props) => {\n  const currentPage = Number(props.match.params.page);\n  const { total, references, pageSize } = filteredReferencesSelector(\n    currentPage,\n    state,\n  );\n  return {\n    currentPage,\n    total,\n    references,\n    pageSize,\n    goToPage: page => {\n      window.scroll(0, 0);\n      props.history.push(`/${page}`);\n    },\n  };\n})(HomeView);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Popover, Button } from 'antd';\nimport SearchComponent from './SearchComponent';\nimport GitHubLink from './GitHubLink';\nimport AddComponent from './AddComponent';\n\nimport HomeView from '../views/home/HomeView';\n\nfunction AppLayout(props) {\n  return (\n    <div className=\"AppLayout\">\n      <Layout>\n        <Layout.Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n          <Menu\n            mode=\"horizontal\"\n            theme=\"dark\"\n            selectable={false}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"home\">\n              <strong>Références</strong>\n            </Menu.Item>\n            <Menu.Item key=\"search\">\n              <SearchComponent resetPage={() => props.history.push('/1')} />\n            </Menu.Item>\n            <Menu.Item>\n              <Popover content={<AddComponent />} trigger=\"click\">\n                <Button type=\"primary\">Ajouter une référence</Button>\n              </Popover>\n            </Menu.Item>\n            <Menu.Item key=\"github\">\n              <GitHubLink />\n            </Menu.Item>\n          </Menu>\n        </Layout.Header>\n        <Layout.Content style={{ padding: '0 50px', marginTop: 64 }}>\n          <Switch>\n            <Route path=\"/:page(\\d+)\" exact component={HomeView} />\n            <Route component={() => <Redirect to={{ pathname: '/1' }} />} />\n          </Switch>\n        </Layout.Content>\n        {/* <Layout.Footer>Footer</Layout.Footer> */}\n      </Layout>\n    </div>\n  );\n}\n\nAppLayout.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }),\n};\n\nexport default withRouter(AppLayout);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport AppLayout from './components/AppLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <AppLayout />\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}